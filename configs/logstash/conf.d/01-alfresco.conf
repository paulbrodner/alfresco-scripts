input {
  file {
    path => "/home/qa/remote/alfresco.log"
    type => "alfresco-log"
    start_position => "end"
    add_field => { "server" => "alf01" }
  }
}

filter {
  if [type] == "alfresco-log" {
    multiline {
      pattern => "(^\d\d\d\d-\d\d-\d\d \d\d:\d\d:\d\d,\d\d\d)"
      negate => true
      what => "previous"
    }

    mutate {
      gsub => [
        # replace double blank space with single blank space
        "message", "  ", " "
      ]
    }

    grok {
      match => [ "message", "%{TIMESTAMP_ISO8601:logdate} %{LOGLEVEL:logLevel} %{NOTSPACE:class} %{NUMBER} %{WORD:from} %{WORD:to} %{DATA} %{NUMBER:bytes:INT} %{WORD} %{DATA:duration} ms",
                 "message", "%{TIMESTAMP_ISO8601:logdate} %{LOGLEVEL:logLevel} %{NOTSPACE:class} Got: %{NUMBER} in %{NUMBER:responseTime:float} ms",
                 "message", "%{TIMESTAMP_ISO8601:logdate} %{LOGLEVEL:logLevel} %{NOTSPACE:class} %{GREEDYDATA:data}" ]
      add_tag => [ "%{logLevel}" ]
      add_field => [ "classMsg", "%{class} %{data}" ]
    }

    mutate {
      gsub => [ "duration", ",", "" ]
    }

    mutate {
      convert => [ "duration", "float" ]s
    }

    date {
       match => ["logdate" , "yyyy-MM-dd HH:mm:ss,SSS"]
       target => "@timestamp"
    }

    grok {
      match => [ "message", "Exception" ]
      add_tag => [ "Exception"]
    }

    grok {
      match => [ "message", "NullPointerException" ]
      add_tag => [ "NullPointerException"]
    }

    grok {
      match => [ "message", "OutOfMemoryError" ]
      add_tag => [ "OutOfMemoryError"]
    }

    grok {
      match => [ "message", "Too many open files" ]
      add_tag => [ "TooManyOpenFiles"]
    }
  }
}

output {
  elasticsearch {
    host => localhost
    port => 9200
    protocol => "http"
    manage_template => false
 }
}